CREATE DATABASE IF NOT EXISTS LearnPlatform;
USE LearnPlatform;

CREATE TABLE User (
    UserID int AUTO_INCREMENT,
    UserName varchar(50) NOT NULL,
    Email varchar(50) NOT NULL,
    Password varchar(100) NOT NULL,
    ProfileImg varchar(255),
    FirstName varchar(50),
    LastName varchar(50),
    Address varchar(50),
    City varchar(50),
    AboutMe varchar(255),
    LastLogin datetime,
    Role varchar(10),
    Gender VARCHAR(10) DEFAULT NULL,
    T_rank ENUM('Dr', 'Prof', 'TA')  DEFAULT NULL,
    Status ENUM('Online', 'Offline', 'Idle') DEFAULT 'Offline',
    PRIMARY KEY (UserID)
);

CREATE TABLE Question(
  QAID int AUTO_INCREMENT,
  UserID int,
  MediaID int,
  CourseID int,
  QueueListID int,
  QuestionTitle varchar(255) NOT NULL,
  Description text NOT NULL,
  UploadTime datetime,
  Type varchar(20) NOT NULL,
  Replied TINYINT NOT NULL,
  Checking TINYINT NOT NULL,
  PRIMARY KEY (QAID),
  FOREIGN KEY (CourseID) REFERENCES Course(CourseID),
  FOREIGN KEY (MediaID) REFERENCES Media(MediaID),
  FOREIGN KEY (QueueListID) REFERENCES Queue_list(QueueListID),
  FOREIGN KEY (UserID) REFERENCES User(UserID)
);



CREATE TABLE Customer_queue (
  CusID INT AUTO_INCREMENT PRIMARY KEY,
  UserID INT,
  QAID INT,
  Timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
  Status ENUM('waiting', 'solved') NOT NULL,
  Position INT,
  FOREIGN KEY (UserID) REFERENCES User(UserID),
  FOREIGN KEY (QAID) REFERENCES Question(QAID)
);


CREATE TABLE Queue (
  QueueID INT AUTO_INCREMENT PRIMARY KEY,
  CusID INT,
  QueueType VARCHAR(1) NOT NULL,
  CurrentQueue INT DEFAULT 0,
  FOREIGN KEY (CusID) REFERENCES Customer_queue(CusID)
);

CREATE TABLE Queue_list (
  QueueListID INT AUTO_INCREMENT PRIMARY KEY,
  CourseID int,
  CreatorID INT NOT NULL,
  Status ENUM('RUNNING', 'PAUSED', 'CLOSED') NOT NULL,
  Created DATETIME NOT NULL,
  CloseDate DATETIME DEFAULT NULL,
  CourseWeek INT DEFAULT 1 NOT NULL,
  AccessCode VARCHAR(10) UNIQUE,
  TimeOut INT NOT NULL DEFAULT 86400 CHECK (TimeOut BETWEEN 86400 AND 604800),
  FOREIGN KEY (CourseID) REFERENCES Course(CourseID)
);

CREATE TABLE Queue_Students (
  QueueListID INT,
  UserID INT,
  PRIMARY KEY (QueueListID, UserID),
  FOREIGN KEY (QueueListID) REFERENCES Queue_list(QueueListID),
  FOREIGN KEY (UserID) REFERENCES User(UserID)
);

CREATE TABLE Queue_Helper (
  QueueListID INT,
  UserID INT,
  PRIMARY KEY (QueueListID, UserID),
  FOREIGN KEY (QueueListID) REFERENCES Queue_list(QueueListID),
  FOREIGN KEY (UserID) REFERENCES User(UserID)
);

CREATE TABLE Answer(
  ASID int AUTO_INCREMENT,
  QAID int,
  UserID int,
  Text LONGTEXT,
  UploadTime datetime,
  TakeTime INT DEFAULT 0,
  PRIMARY KEY (ASID),
  FOREIGN KEY (QAID) REFERENCES Question(QAID),
  FOREIGN KEY (UserID) REFERENCES User(UserID)
);

CREATE TABLE Forum (
    ForumID int AUTO_INCREMENT,
    MediaID int,
    UserID int,
    CourseID int,
    ForumTitle varchar(100) NOT NULL,
    Description longtext,
    ForumType ENUM('Private', 'Group'),
    UpdatedTime datetime,
    LastUpdated datetime,
    LikeNum int(255),
    Reples int(10) DEFAULT 0,
    FOREIGN KEY (CourseID) REFERENCES Course(CourseID),
    FOREIGN KEY (UserID) REFERENCES User(UserID),
    FOREIGN KEY (MediaID) REFERENCES Media(MediaID),
    PRIMARY KEY (ForumID)
);

CREATE TABLE ForumLikes (
    LikeID INT AUTO_INCREMENT PRIMARY KEY,
    ForumID INT,
    UserID INT,
    FOREIGN KEY (ForumID) REFERENCES Forum(ForumID),
    FOREIGN KEY (UserID) REFERENCES User(UserID)
);


CREATE TABLE ForumComment(
  CommentID int AUTO_INCREMENT,
  ForumID int,
  UserID int,
  Text varchar(255),
  SendTime  datetime,
  LikeNum int(255),
  PRIMARY KEY (CommentID),
  FOREIGN KEY (ForumID) REFERENCES Forum(ForumID),
  FOREIGN KEY (UserID) REFERENCES User(UserID)
);


CREATE TABLE CommentLikes (
    LikeID INT AUTO_INCREMENT PRIMARY KEY,
    CommentID INT,
    UserID INT,
    FOREIGN KEY (CommentID) REFERENCES ForumComment(CommentID),
    FOREIGN KEY (UserID) REFERENCES User(UserID)
);



CREATE TABLE Media(
  MediaID int AUTO_INCREMENT,
  UserID int,
  Video_Type varchar(10),
  Title varchar(100),
  UploadDate datetime,
  Path varchar(255),
  FOREIGN KEY (UserID) REFERENCES User(UserID),
  PRIMARY KEY (MediaID)
);

CREATE TABLE Course(
  CourseID int AUTO_INCREMENT,	
  UserID INT,
  CourseName varchar(150) NOT NULL,
  TeacherName varchar(20),
  Semester varchar(20),
  ForumNum int,
  TotalWeek INT DEFAULT 12,
  FOREIGN KEY (UserID) REFERENCES User(UserID),
  PRIMARY KEY (CourseID)
);

CREATE TABLE CourseJoin(
  CourseJoinID int AUTO_INCREMENT,
  UserID int,
  CourseID int,
  FOREIGN KEY (CourseID) REFERENCES Course(CourseID),
  FOREIGN KEY (UserID) REFERENCES User(UserID),
  PRIMARY KEY (CourseJoinID)
);


CREATE TABLE notifications (
    NotificationID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    QAID INT,
    Message VARCHAR(255),
    IsRead BOOLEAN DEFAULT FALSE,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES User(UserID),
    FOREIGN KEY (QAID) REFERENCES question(QAID)
);

CREATE TABLE invitation(
    InvitationID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    QueueListID INT,
    Message VARCHAR(255),
    IsRead BOOLEAN DEFAULT FALSE,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES User(UserID),
    FOREIGN KEY (QueueListID) REFERENCES Queue_list(QueueListID)
);	
